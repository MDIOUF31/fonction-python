# -*- coding: utf-8 -*-
"""fonctionpython.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vBPX2nN_VQikacC0JZ78cSl3xufPYdK1
"""

#Définition des fonctions mathématiques de base
def addition(x, y):
    return x + y

def soustraction(x, y):
    return x - y

def multiplication(x, y):
    return x * y

def division(x, y):
    if y == 0:
        return "Impossible de diviser par zéro!"
    else:
        return x / y

# Dictionnaire des opérations qui attribue les fonctions aux symboles d'opération correspondants
operations = {"+": addition, "-": soustraction, "*": multiplication, "/": division}

# Fonction calculatrice qui invite l'utilisateur à entrer le premier nombre
def calculatrice():
    x = float(input("Veuillez entrer votre premier nombre : "))

#boucle while qui continuera à s'exécuter jusqu'à ce que l'utilisateur choisisse de mettre fin au calcul en cours.
    while True:
        print("Symboles d'opérations disponibles :")
  # Boucle for pour imprimer les symboles d'opération disponibles
        for operation in operations.keys():
            print(operation, end=' ')
        print()

        operation = input("Veuillez choisir un symbole parmi ceux qui sont disponibles : ")
        if operation not in operations.keys():
            print("Symbole saisi non disponible, veuillez choisir parmi ceux qui sont disponibles.")
            continue  # Revenir au début de la boucle

        y = float(input("Veuillez entrer votre deuxième nombre : "))
        calculatrice_function = operations[operation]

        reponse = calculatrice_function(x, y)
        print(f"{x} {operation} {y} = {reponse}")

        decision = input("Souhaitez-vous utiliser le résultat comme premier nombre pour le calcul suivant? (oui/non) : ")
        if decision.lower() == "oui":
            x = reponse
        else:
           print("Au revoir et à la prochaine pour d'autre experience.")
           break

# Appel de la fonction calculatrice
calculatrice()